from fpdf import FPDF
import streamlit as st
from datetime import datetime
import os

def generate_pdf_report(summary_data, top_zones):
    try:
        pdf = FPDF()
        pdf.set_auto_page_break(auto=True, margin=15)
        pdf.add_page()

        # Header
        pdf.set_font("Arial", "B", 20)
        pdf.set_text_color(13, 71, 161)  # Blue color
        pdf.cell(0, 15, "CrimeScan Analysis Report", ln=True, align="C")
        
        # Date
        pdf.set_font("Arial", size=10)
        pdf.set_text_color(0, 0, 0)
        pdf.cell(0, 10, f"Generated on: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}", ln=True, align="R")
        pdf.ln(10)

        # Summary Section
        pdf.set_font("Arial", "B", 14)
        pdf.cell(0, 10, "Executive Summary", ln=True)
        pdf.line(10, pdf.get_y(), 200, pdf.get_y())
        pdf.ln(5)

        pdf.set_font("Arial", size=12)
        for key, value in summary_data.items():
            # Replace bullet character with simple dash
            pdf.cell(0, 8, f"- {key}: {value}", ln=True)

        pdf.ln(10)

        # Top Crime Zones Section
        pdf.set_font("Arial", "B", 14)
        pdf.cell(0, 10, "Top Crime Zones", ln=True)
        pdf.line(10, pdf.get_y(), 200, pdf.get_y())
        pdf.ln(5)

        # Check if top_zones has data
        if not top_zones.empty:
            pdf.set_font("Arial", "B", 10)
            # Table headers
            pdf.cell(60, 8, "Location", 1, 0, "C")
            pdf.cell(60, 8, "Crime Type", 1, 0, "C")
            pdf.cell(30, 8, "Cases", 1, 0, "C")
            pdf.cell(30, 8, "Severity", 1, 1, "C")

            pdf.set_font("Arial", size=10)
            for _, row in top_zones.head(10).iterrows():  # Limit to top 10
                # Clean text to avoid encoding issues
                location = str(row.get('Location', 'N/A')).encode('latin-1', 'ignore').decode('latin-1')[:25]
                crime_type = str(row.get('Crime Type', 'N/A')).encode('latin-1', 'ignore').decode('latin-1')[:25]
                cases = str(row.get('Cases', 0))
                severity = str(row.get('Severity', 0))
                
                pdf.cell(60, 8, location, 1, 0)
                pdf.cell(60, 8, crime_type, 1, 0)
                pdf.cell(30, 8, cases, 1, 0, "C")
                pdf.cell(30, 8, severity, 1, 1, "C")
        else:
            pdf.set_font("Arial", size=12)
            pdf.cell(0, 8, "No crime zone data available", ln=True)

        # Footer
        pdf.ln(20)
        pdf.set_font("Arial", "I", 8)
        pdf.cell(0, 10, "This report is generated by CrimeScan Analytics Platform", ln=True, align="C")
        pdf.cell(0, 5, "Data is processed and anonymized for security purposes", ln=True, align="C")

        # Save file
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        file_path = f"CrimeScan_Report_{timestamp}.pdf"
        pdf.output(file_path)
        
        return file_path
        
    except Exception as e:
        st.error(f"Error generating PDF: {str(e)}")
        return None
